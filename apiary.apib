FORMAT: 1A
HOST: https://api.mycred.io

# CRED CLaaS API

API documentation for CRED CRYPTO Lending as a service API

## Loan proposition  [/ltv]

### Get LTV calculator [GET/api/v1/ltv]

Cred offers various customized CLOC programs to meet the needs and requirements for each partner based on business arrangements.  A detailed loan proposition is returned to you with all the details you need to present to your customers
in the  format that is best suited for your application.
+ Request

    + Headers

            Authorization: None

+ Response 200 (application/json)

        [  
            {  
                "currency":"USD",
                "max_credit":200000,
                "min_credit":500,
                "interest_rates":[  
                    {  
                        "borrower_residence":"US",
                        "tenor_in_months":36,
                        "rate":12,
                        "discounts":[  
                            {  
                                "currency":"LBA",
                                "min_discount":1,
                                "max_discount":3,
                                "discount_step":1
                            }
                        ]
                    },
                    {  
                        "borrower_residence":"NON-US",
                        "tenor_in_months":36,
                        "rate":15,
                        "discounts":[  
                            {  
                                "currency":"LBA",
                                "min_discount":1,
                                "max_discount":6,
                                "discount_step":1
                            }
                        ]
                    }
                ],
                "eth_ltv":0.33,
                "btc_ltv":0.33,
                "xrp_ltv":0.33,
                "fees_response": {
                    "administrative_fee":39,
                    "annual_fee":0,
                    "exchange_fee_in_percentage":1,
                    "late_fee":0,
                    "origination_fee_in_percentage":0,
                    "over_limit_fee":0,
                    "returned_payment_fee":0
                },
                "daily_withdrawal_limit": 0,
            }
        ]
            
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }
        
### Fair Market Value of coins [GET/api/v1/oracle/fmv?{convert}=USD&{numberOfCoins}=1&{symbol}=ETH]

The crypto assets' Fair Market Value (FMV) allows you to calculate the estimated loan amount to be made available to the borrowers


+ Parameters

    + convert (required) - Legal money symbol which you want convert to
    + numberOfCoins (required) - Number of coins
    + symbol (required) - Coin symbol

+ Request

    + Headers

            Authorization: None

+ Response 200 (application/json)

        {
            "symbol": "ETH",
            "convert": "USD",
            "number_of_coins": 1,
            "fair_market_value": 113.583
        }


+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }
        
## Users [/users]

User onboarding and management with CRED platform.

### User signup [POST/api/v1/users] 

The Sign-Up API is the first step to customer onboarding to collect their basic account information.  This returns a unqiue identifier for each user.  The user_id should be kept on the partner's system for future reference or inquiry for a specific user/account



+ Request (application/json)

        {
            "country_code": "+1",
            "mobile_number": "4156089756",
            "partner_user_uuid": "d4a44579-c996-4e30-a7c1-06245f1eb1fb",
            "tc_enabled": "true",
            "user_name": "john@mycred.io"
        }

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
+ Response 200 (application/json)

        {
            "uuid": "d4a44579-c996-4e30-a7c1-06245f1eb1fb",
            "user_name": "john@mycred.io",
            "country_code":"+1",
            "mobile_number": "4153579089",
            "tc_enabled": "true",
            "partner_details": {
                "partner_name":"uphold",
                "partner_user_uuid":"d4a44579-c996-4e30-a7c1-06245f1eb1fb"
            }
        }
        
+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
 
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }

### User KYC [POST/api/v1/users/uuid/kyc] 

The KYC API collects the memberâ€™s PIIs for Cred to fulfill our KYC requirements.  Cred is required to perform our own KYC for each CLOC customer. Partner should only allow member to move forward with C-LOC application if both account status and kyc status are in good standing.

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED   

+ Request (application/json)

        {
            "first_name": "John",
            "last_name": "Doe",
            "address": {
                "line1": "487 Cumber Lane",
                "line2": "Block 5",
                "state": "CA",
                "zip": "94105",
                "country": "USA"
            },
            "dob":"12/31/91",
            "document_id":"3456",
            "resident": "US" 
        }
        
    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
            
+   Response 200 (application/json)

        {
            "uuid": "d4a44579-c996-4e30-a7c1-06245f1eb1fb",
            "first_name": "John",
            "last_name": "Doe",
            "status": "enabled",
            "kyc": {
                "status": "PENDING"
            },
            "address": {
                "line1": "487 Cumber Lane",
                "line2": "Block 5",
                "state": "CA",
                "zip": "94105",
                "country": "USA"
            },
            "partner_details": {
                "partner_name":"uphold",
                "partner_user_id":"d4a44579-c996-4e30-a7c1-06245f1eb1fb"
            },
            "mobile": "4150689089",
            "country_code":"+1",
            "tc_enabled": "true",
            "dob":"12/31/91",
            "user_name": "john@mycred.io",
            "resident": "US"   
        }
        
+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
             
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }
### User KYC Document verification [POST/api/v1/users/uuid/kyc/verify/documents] 

Customer to submit goverment ID to check for autheticity validation.  This is a part of the KYC service.
+ Parameters:

    + `uuid` (string) - User uuid issued by CRED   

+ Request (application/json)

        {
            {
            
            "country_code": "US",
            "data_fields": {
                "document": {
                  "document_back_image": "base64imagestring",
                  "document_front_image": "base64imagestring",
                  "document_type": "string"
                }
            }
            }
        }
        
    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
            
+   Response 200 (application/json)

        {
            "id": "H4a44579-c996-4e30-a7c1-879r",
        }
        
+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
             
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }


### Get user [GET/api/v1/users/uuid]  

The user's account status is updated throughout the lifecycle of the account.  This API is used to get the most up-to-date status of the user account.


+ Parameters:

    + `uuid` (string) - user uuid issued by CRED 
    

+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
            
+   Response 200 (application/json)

        {
            "uuid": "d4a44579-c996-4e30-a7c1-06245f1eb1fb",
            "first_name": "John",
            "last_name": "Doe",
            "status": "enabled",
            "kyc": {
                "status": "pending"
            },
            "address": {
                "line1": "487 Cumber Lane",
                "line2": "Block 5",
                "state": "CA",
                "zip": "94105",
                "country": "USA"
            },
            "partner_details": {
                "partner_name":"uphold",
                "partner_user_id":"d4a44579-c996-4e30-a7c1-06245f1eb1fb"
            },
            "mobile": "4150689089",
            "country_code":"+1",
            "tc_enabled": "true",
            "dob":"12/31/91",
            "user_name": "john@mycred.io",
            "resident": "US"   
        }

        
+ Response 401

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
             
+ Response 400

        {
            "error": "Bad request",
            "code" : "400"
        }
         
            
## Quotes [/quotes]

Based on the details of collateral available, Cred generates the CLOC quote for the user.  The CLOC quote has an expiration of 3 hours from the time it is issued. The customer must AGREE to the loan agree to proceed furhter.


### Create quote request [POST/api/v1/users/uuid/quotes]  

Based on the available collateral, a time limited CLOC quote is generated for the borrower. 

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED

+ Request (application/json)

        {  
            "collateral":{  
                "btc":2,
                "eth":1,
                "xrp":0
            },
            "currency":"USD",
            "interest_rate_rebates":[  
                {  
                    "currency":"LBA",
                    "percentage":1
                }
            ],
            "tenor_in_months":36
        }
        
    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
   
+ Response 200 (application/json)

        {  
            "id":"461022b1-9875-437c-b83f-6bc4c6e64434",
            "user_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
            "status":"PENDING",
            "msg":"",
            "credit_line":0,
            "currency":"USD",
            "annual_interest_percent":0,
            "tenor_in_months":36,
            "daily_withdrawal_limit":0,
            "over_limit_allowance_amount":0,
            "over_limit_allowance_count_per_billing":0,
            "fees":{  
                "annual_fee":0,
                "origination_fee_in_percentage":0,
                "administrative_fee":0,
                "late_fee":0,
                "over_limit_fee":0,
                "returned_payment_fee":0,
                "exchange_fee_in_percentage":0
            },
            "collateral":{  
                "btc":2,
                "eth":1,
                "xrp":0
            },
            "discount":0,
            "interest_rate_rebates":[  
                {  
                    "currency":"LBA",
                    "percentage":1
                }
            ],
            "expiration_date":"2018-11-28T12:17:50.475+0000"
        }
        
+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }

### Get quote [GET/api/v1/users/uuid/quotes/quoteId]  
Retrieve CLOC quote status (i.e. approved, expired etc) and details

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED
    + `quoteId` (string) - quoteId issued by cred during quote create request.

+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            

+   Response 200 (application/json)

        {  
            "id":"461022b1-9875-437c-b83f-6bc4c6e64434",
            "user_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
            "status":"APPROVED",
            "msg":"",
            "credit_line":2637.742,
            "currency":"USD",
            "annual_interest_percent":14,
            "tenor_in_months":36,
            "daily_withdrawal_limit":7500,
            "over_limit_allowance_amount":100,
            "over_limit_allowance_count_per_billing":3,
            "fees":{  
                "annual_fee":0,
                "origination_fee_in_percentage":3,
                "administrative_fee":250,
                "late_fee":39,
                "over_limit_fee":29,
                "returned_payment_fee":30,
                "exchange_fee_in_percentage":1
            },
            "collateral":{  
                "btc":2,
                "eth":1,
                "xrp":0
            },
            "discount":1,
            "interest_rate_rebates":[  
                {  
                    "currency":"LBA",
                    "percentage":1
                }
            ],
            "expiration_date":"2018-11-28T15:18:04.000+0000"
        }
        
+ Response 401

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400

        {
            "error": "Bad request",
            "code" : "400"
        }
   
### Get all user quotes [GET/api/v1/users/uuid/quotes/]  

Request quote based on quote id.

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED

+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            

+   Response 200 (application/json)

        {
            "content": [
                {  
                    "id":"461022b1-9875-437c-b83f-6bc4c6e64434",
                    "user_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
                    "status":"PENDING",
                    "msg":"",
                    "credit_line":0,
                    "currency":"USD",
                    "annual_interest_percent":0,
                    "tenor_in_months":36,
                    "daily_withdrawal_limit":0,
                    "over_limit_allowance_amount":0,
                    "over_limit_allowance_count_per_billing":0,
                    "fees":{  
                        "annual_fee":0,
                        "origination_fee_in_percentage":0,
                        "administrative_fee":0,
                        "late_fee":0,
                        "over_limit_fee":0,
                        "returned_payment_fee":0,
                        "exchange_fee_in_percentage":0
                    },
                    "collateral":{  
                        "btc":2,
                        "eth":1,
                        "xrp":0
                    },
                    "discount":0,
                    "interest_rate_rebates":[  
                        {  
                            "currency":"LBA",
                            "percentage":1
                        }
                    ],
                    "expiration_date":"2018-11-28T12:17:50.475+0000"
                }
            ],
            "pageable": {
                "sort": {
                    "unsorted": true,
                    "sorted": false
                },
                "page_number": 0,
                "page_size": 20,
                "offset": 0,
                "paged": true,
                "unpaged": false
            },
            "total_pages": 1,
            "last": true,
            "total_elements": 1,
            "first": true,
            "sort": {
                "unsorted": true,
                "sorted": false
            },
            "number_of_elements": 1,
            "size": 20,
            "number": 0
        }

+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }
   

## CLOC [/cloc]            
            
### Create CLOC request [POST/api/v1/users/uuid/cloc] 

Request for creation of CLOC account for a given user uuid.

+ Parameters:

    + `uuid` (string)- User uuid issued by CRED  

+ Request (application/json)

        {  
            "esignature":"34.234.234.23-2018-11-11T20:45:55.000+0000",
            "funding_method":{  
                "collateral":[  
                    {  
                        "currency":"BTC",
                        "ref_id":"82b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ],
                "destination_account":{  
                    "currency":"USD",
                    "ref_id":"92b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "source_account":{  
                    "currency":"USD",
                    "ref_id":"11b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "stake":[  
                    {  
                        "currency":"LBA",
                        "ref_id":"89b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ]
            },
            "quote_id":"461022b1-9875-437c-b83f-6bc4c6e64434"
        }

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            

+ Response 200 (application/json)

        {  
            "id":"f92a6141-c567-469f-af47-d66457722762",
            "user_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
            "quote_id":"461022b1-9875-437c-b83f-6bc4c6e64434",
            "status":"PENDING",
            "msg":"",
            "credit_line":0,
            "annual_interest_percent":0,
            "discount":0,
            "tenor_in_months":0,
            "origination_date":"2018-11-28T13:59:16.848+0000",
            "available_credit":0,
            "ltv":0,
            "maintenance_ltv":0,
            "daily_withdrawal_limit":0,
            "over_limit_allowance_amount":0,
            "over_limit_allowance_count_per_billing":0,
            "billing_cycle":"MONTH",
            "account_standing":0,
            "outstanding_balance":0,
            "principal_outstanding":0,
            "total_charges":0,
            "current_cycle_interest":0,
            "current_cycle_fees":0,
            "net_current_charges":0,
            "minimum_payment_due_date":"2018-11-28T13:59:16.848+0000",
            "billed_interest":0,
            "billed_fees":0,
            "net_billed_charges":0,
            "funding_method":{  
                "collateral":[  
                    {  
                        "currency":"BTC",
                        "ref_id":"82b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ],
                "destination_account":{  
                    "currency":"USD",
                    "ref_id":"92b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "source_account":{  
                    "currency":"USD",
                    "ref_id":"11b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "stake":[  
                    {  
                        "currency":"LBA",
                        "ref_id":"89b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ]
            },
            "fees":{  
                "annual_fee":0,
                "origination_fee":0,
                "administrative_fee":0,
                "late_fee":0,
                "over_limit_fee":0,
                "returned_payment_fee":0,
                "exchange_fee_in_percentage":0
            },
            "collateral":{  
                "btc":2,
                "eth":1,
                "xrp":0
            },
            "interest_rate_rebates":[  
                {  
                    "currency":"LBA",
                    "percentage":1
                }
            ],
            "booking_information":{  
                "country": "US",
                "currency": "USD",
                "timezone": "EST"
            },
            "esignature":"34.234.234.23-2018-11-11T20:45:55.000+0000"
        }
        
+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }
        
            
### Get CLOC [GET/api/v1/users/uuid/cloc/clocId]  

Get CLOC account information by id for a given user

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED  
    + `clocId` (string) - cloc account id issued by CRED

+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
+ Response 200 (application/json)

        {  
            "id":"f92a6141-c567-469f-af47-d66457722762",
            "user_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
            "quote_id":"461022b1-9875-437c-b83f-6bc4c6e64434",
            "status":"ACTIVE",
            "msg":"",
            "credit_line":2637.742,
            "annual_interest_percent":15,
            "discount":0,
            "tenor_in_months":36,
            "origination_date":"2018-11-28T14:03:43.716+0000",
            "available_credit":2637.742,
            "ltv":0,
            "maintenance_ltv":0,
            "daily_withdrawal_limit":7500,
            "over_limit_allowance_amount":0,
            "over_limit_allowance_count_per_billing":0,
            "billing_cycle":"MONTH",
            "account_standing":0,
            "outstanding_balance":0,
            "principal_outstanding":0,
            "total_charges":0,
            "current_cycle_interest":0,
            "current_cycle_fees":0,
            "net_current_charges":0,
            "minimum_payment_due_date":"2018-11-28T13:59:16.848+0000",
            "billed_interest":0,
            "billed_fees":0,
            "net_billed_charges":0,
            "funding_method":{  
                "collateral":[  
                    {  
                        "currency":"BTC",
                        "ref_id":"82b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ],
                "destination_account":{  
                    "currency":"USD",
                    "ref_id":"92b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "source_account":{  
                    "currency":"USD",
                    "ref_id":"11b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "stake":[  
                    {  
                        "currency":"LBA",
                        "ref_id":"89b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ]
            },
            "fees":{  
                "annual_fee":0,
                "origination_fee":0,
                "administrative_fee":0,
                "late_fee":0,
                "over_limit_fee":0,
                "returned_payment_fee":0,
                "exchange_fee_in_percentage":0
            },
            "collateral":{  
                "btc":2,
                "eth":1,
                "xrp":0
            },
            "interest_rate_rebates":[  
                {  
                    "currency":"LBA",
                    "percentage":1
                }
            ],
            "booking_information":{  
                "country": "US",
                "currency": "USD",
                "timezone": "EST"
            },
            "esignature":"34.234.234.23-2018-11-11T20:45:55.000+0000"
        }

+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }


### Get active CLOC account [GET/api/v1/users/uuid/cloc/active]  

Get active CLOC account for a given user uuid

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED  

+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
   
+ Response 200 (application/json)

        {  
            "id":"f92a6141-c567-469f-af47-d66457722762",
            "user_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
            "quote_id":"461022b1-9875-437c-b83f-6bc4c6e64434",
            "status":"ACTIVE",
            "msg":"",
            "credit_line":2637.742,
            "annual_interest_percent":15,
            "discount":0,
            "tenor_in_months":36,
            "origination_date":"2018-11-28T14:03:43.716+0000",
            "available_credit":2637.742,
            "ltv":0,
            "maintenance_ltv":0,
            "daily_withdrawal_limit":7500,
            "over_limit_allowance_amount":0,
            "over_limit_allowance_count_per_billing":0,
            "billing_cycle":"MONTH",
            "account_standing":0,
            "outstanding_balance":0,
            "principal_outstanding":0,
            "total_charges":0,
            "current_cycle_interest":0,
            "current_cycle_fees":0,
            "net_current_charges":0,
            "minimum_payment_due_date":"2018-11-28T13:59:16.848+0000",
            "billed_interest":0,
            "billed_fees":0,
            "net_billed_charges":0,
            "funding_method":{  
                "collateral":[  
                    {  
                        "currency":"BTC",
                        "ref_id":"82b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ],
                "destination_account":{  
                    "currency":"USD",
                    "ref_id":"92b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "source_account":{  
                    "currency":"USD",
                    "ref_id":"11b27574-9637-4156-9202-9657442ceffd",
                    "transfer_method":"UPHOLD"
                },
                "stake":[  
                    {  
                        "currency":"LBA",
                        "ref_id":"89b27574-9637-4156-9202-9657442ceffd",
                        "transfer_method":"UPHOLD"
                    }
                ]
            },
            "fees":{  
                "annual_fee":0,
                "origination_fee":0,
                "administrative_fee":0,
                "late_fee":0,
                "over_limit_fee":0,
                "returned_payment_fee":0,
                "exchange_fee_in_percentage":0
            },
            "collateral":{  
                "btc":2,
                "eth":1,
                "xrp":0
            },
            "interest_rate_rebates":[  
                {  
                    "currency":"LBA",
                    "percentage":1
                }
            ],
            "booking_information":{  
                "country": "US",
                "currency": "USD",
                "timezone": "EST"
            },
            "esignature":"34.234.234.23-2018-11-11T20:45:55.000+0000"
        }

+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }


### Get all user CLOC accounts [GET/api/v1/users/uuid/cloc]  

Get all CLOC accounts for a given user uuid

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED  

+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            
   
+ Response 200 (application/json)

        {
            "content": [
                {  
                    "id":"f92a6141-c567-469f-af47-d66457722762",
                    "user_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
                    "quote_id":"461022b1-9875-437c-b83f-6bc4c6e64434",
                    "status":"ACTIVE",
                    "msg":"",
                    "credit_line":2637.742,
                    "annual_interest_percent":15,
                    "discount":0,
                    "tenor_in_months":36,
                    "origination_date":"2018-11-28T14:03:43.716+0000",
                    "available_credit":2637.742,
                    "ltv":0,
                    "maintenance_ltv":0,
                    "daily_withdrawal_limit":7500,
                    "over_limit_allowance_amount":0,
                    "over_limit_allowance_count_per_billing":0,
                    "billing_cycle":"MONTH",
                    "account_standing":0,
                    "outstanding_balance":0,
                    "principal_outstanding":0,
                    "total_charges":0,
                    "current_cycle_interest":0,
                    "current_cycle_fees":0,
                    "net_current_charges":0,
                    "minimum_payment_due_date":"2018-11-28T13:59:16.848+0000",
                    "billed_interest":0,
                    "billed_fees":0,
                    "net_billed_charges":0,
                    "funding_method":{  
                        "collateral":[  
                            {  
                                "currency":"BTC",
                                "ref_id":"82b27574-9637-4156-9202-9657442ceffd",
                                "transfer_method":"UPHOLD"
                            }
                        ],
                        "destination_account":{  
                            "currency":"USD",
                            "ref_id":"92b27574-9637-4156-9202-9657442ceffd",
                            "transfer_method":"UPHOLD"
                        },
                        "source_account":{  
                            "currency":"USD",
                            "ref_id":"11b27574-9637-4156-9202-9657442ceffd",
                            "transfer_method":"UPHOLD"
                        },
                        "stake":[  
                            {  
                                "currency":"LBA",
                                "ref_id":"89b27574-9637-4156-9202-9657442ceffd",
                                "transfer_method":"UPHOLD"
                            }
                        ]
                    },
                    "fees":{  
                        "annual_fee":0,
                        "origination_fee":0,
                        "administrative_fee":0,
                        "late_fee":0,
                        "over_limit_fee":0,
                        "returned_payment_fee":0,
                        "exchange_fee_in_percentage":0
                    },
                    "collateral":{  
                        "btc":2,
                        "eth":1,
                        "xrp":0
                    },
                    "interest_rate_rebates":[  
                        {  
                            "currency":"LBA",
                            "percentage":1
                        }
                    ],
                    "booking_information":{  
                        "country": "US",
                        "currency": "USD",
                        "timezone": "EST"
                    },
                    "esignature":"34.234.234.23-2018-11-11T20:45:55.000+0000"
                }
            ],
            "pageable": {
                "sort": {
                    "unsorted": true,
                    "sorted": false
                },
                "page_number": 0,
                "page_size": 20,
                "offset": 0,
                "paged": true,
                "unpaged": false
            },
            "total_pages": 1,
            "last": true,
            "total_elements": 1,
            "first": true,
            "sort": {
                "unsorted": true,
                "sorted": false
            },
            "number_of_elements": 1,
            "size": 20,
            "number": 0
        }

+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }

## Transactions [/transactions]            
            
### Create withdraw authorization [POST/api/v1/users/uuid/cloc/clocId/transaction/]  

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED  
    + `clocId` (string) - CLOC id issued by cred after cloc CLOC

+ Request (application/json)

        {  
            "amount":1000,
            "notes":"Sample withdrawal",
            "destination_account":{  
                "currency":"USD",
                "ref_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
                "transfer_method":"UPHOLD"
            }
        }

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
        
+ Response 200 (application/json)

        {
            "amount": 1000,
            "cloc_id": "3db06b74-091d-49d7-9fcf-21366c646ac5",
            "id": "992833a1-44c1-4b0a-9eba-b4b6c88b6e15",
            "msg": "",
            "notes": "Withdrawal request",
            "destination_account": {
                "currency": "USD",
                "ref_id": "a2ebfc23-69cb-4b12-bde1-089ef0db1321",
                "transfer_method": "UPHOLD"
            },
            "settlement_info": {
                "created_date": "2018-11-11T21:45:00.367Z",
                "representments": [],
                "settled_date": "",
                "status": "PENDING"
            },
            "status": "PENDING",
            "transaction_date": "2018-11-11T21:45:00.367Z",
            "type": "WITHDRAWAL",
            "user_id": "c4a44579-c996-4e30-a7c1-06245f1eb1fb"
        }

+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }
        
### Get transaction [GET/api/v1/users/uuid/cloc/clocId/transactions/transactionId]  

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED  
    + `transactionId` (string) - Transaction id issued by cred after transaction request.
    + `clocId` (string) - CLOC id issued by cred after cloc creation


+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l

+ Response 200 (application/json)

        {
            "amount": 1000,
            "cloc_id": "3db06b74-091d-49d7-9fcf-21366c646ac5",
            "currency": "USD",
            "id": "992833a1-44c1-4b0a-9eba-b4b6c88b6e15",
            "msg": "",
            "notes": "Withdrawal request",
            "destination_account": {
                "ref_id": "a2ebfc23-69cb-4b12-bde1-089ef0db1321",
                "transfer_method": "UPHOLD",
                "currency": "USD"
            },
            "settlement_info": {
                "created_date": "2018-11-11T21:45:00.367Z",
                "representments": [{
                    "representment_date": "2018-11-11T21:45:00.367Z",
                    "status": "SUCCESS"
                }],
                "settled_date": "2018-11-11T21:45:00.367Z",
                "status": "SUCCESS"
            },
            "status": "SUCCESS",
            "transaction_date": "2018-11-11T21:45:00.367Z",
            "type": "WITHDRAWAL",
            "user_id": "c4a44579-c996-4e30-a7c1-06245f1eb1fb"
        }


+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }
        
### Create repayment authorization [POST/api/v1/users/uuid/cloc/clocId/repayment/]  

+ Parameters:

    + `uuid` (string) - User uuid issued by CRED  
    + `clocId` (string) - CLOC id issued by cred after cloc CLOC

+ Request (application/json)

        {  
            "amount":1000,
            "notes":"Sample Repayment",
            "source_account":{  
                "currency":"USD",
                "ref_id":"c61fbb14-64f3-4693-b904-f799ff1dd84a",
                "transfer_method":"UPHOLD"
            }
        }

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
        
+ Response 200 (application/json)

        {
            "amount": 1000,
            "cloc_id": "3db06b74-091d-49d7-9fcf-21366c646ac5",
            "id": "992833a1-44c1-4b0a-9eba-b4b6c88b6e15",
            "msg": "",
            "notes": "Withdrawal request",
            "destination_account": {
                "currency": "USD",
                "ref_id": "a2ebfc23-69cb-4b12-bde1-089ef0db1321",
                "transfer_method": "UPHOLD"
            },
            "settlement_info": {
                "created_date": "2018-11-11T21:45:00.367Z",
                "representments": [],
                "settled_date": "",
                "status": "PENDING"
            },
            "status": "PENDING",
            "transaction_date": "2018-11-11T21:45:00.367Z",
            "type": "REPAYMENT",
            "user_id": "c4a44579-c996-4e30-a7c1-06245f1eb1fb"
        }

+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }


### Get all CLOC transactions [GET/api/v1/users/uuid/cloc/clocId/transactions]  

+ Parameters:

    + `uuid` (string)- User uuid issued by CRED  
    + `clocId` (string) - cloc id issued by cred after cloc creation

+ Request (application/json)

    + Headers

            Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l
            

+ Response 200 (application/json)

        {
            "content": [
                {
                    "amount": 1000,
                    "cloc_id": "3db06b74-091d-49d7-9fcf-21366c646ac5",
                    "currency": "USD",
                    "id": "992833a1-44c1-4b0a-9eba-b4b6c88b6e15",
                    "msg": "",
                    "notes": "Withdrawal request",
                    "destination_account": {
                        "ref_id": "a2ebfc23-69cb-4b12-bde1-089ef0db1321",
                        "transfer_method": "UPHOLD",
                        "currency": "USD"
                    },
                    "settlement_info": {
                        "created_date": "2018-11-11T21:45:00.367Z",
                        "representments": [{
                            "representment_date": "2018-11-11T21:45:00.367Z",
                            "status": "SUCCESS"
                        }],
                        "settled_date": "2018-11-11T21:45:00.367Z",
                        "status": "SUCCESS"
                    },
                    "status": "SUCCESS",
                    "transaction_date": "2018-11-11T21:45:00.367Z",
                    "type": "WITHDRAWAL",
                    "user_id": "c4a44579-c996-4e30-a7c1-06245f1eb1fb"
                }
            ],
            "pageable": {
                "sort": {
                    "unsorted": true,
                    "sorted": false
                },
                "page_number": 0,
                "page_size": 20,
                "offset": 0,
                "paged": true,
                "unpaged": false
            },
            "total_pages": 1,
            "last": true,
            "total_elements": 1,
            "first": true,
            "sort": {
                "unsorted": true,
                "sorted": false
            },
            "number_of_elements": 1,
            "size": 20,
            "number": 0
        }

+ Response 401 (application/json)

        {
            "error": "Un-Authorized",
            "code" : "001"
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad request",
            "code" : "400"
        }